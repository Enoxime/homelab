---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 30m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: ">= v0.15.0"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: monitoring
      interval: 1440m
  values:
    grafana:
      ## Deploy GrafanaDashboard CRDs that reference dashboards from ConfigMaps when grafana-operator is used
      ## These settings control how dashboards are integrated with the Grafana Operator
      ## Note: End user still need to create is own kind: GrafanaDataSource for Prometheus
      ## eg:
      ## apiVersion: grafana.integreatly.org/v1beta1
      ## kind: GrafanaDatasource
      ## metadata:
      ##   name: prometheus
      ##   annotations: {}
      ## spec:
      ##   allowCrossNamespaceImport: true
      ##   instanceSelector:
      ##     matchLabels:
      ##       app: grafana
      ##   datasource:
      ##     name: prometheus
      ##     type: prometheus
      ##     access: proxy
      ##     url: http://prometheus-operated.prometheus-stack.svc.cluster.local:9090
      ##     isDefault: true
      ##     jsonData:
      ##       "tlsSkipVerify": true
      ##       "timeInterval": "5s"
      ##
      operator:
        ## Enable references to ConfigMaps containing dashboards in GrafanaDashboard CRs
        ## Set to true to allow dashboards to be loaded from ConfigMap references
        dashboardsConfigMapRefEnabled: false
      defaultDashboardsTimezone: America/Toronto
      ## Configure additional grafana datasources (passed through tpl)
      ## ref: https://grafana.com/docs/grafana/latest/administration/provisioning/#datasources
      additionalDataSources: []
      # - name: prometheus-sample
      #   access: proxy
      #   basicAuth: true
      #   secureJsonData:
      #       basicAuthPassword: pass
      #   basicAuthUser: daco
      #   editable: false
      #   jsonData:
      #       tlsSkipVerify: true
      #   orgId: 1
      #   type: prometheus
      #   url: https://{{ printf "%s-prometheus.svc" .Release.Name }}:9090
      #   version: 1
      persistence:
        enabled: true
        storageClassName: rook-ceph-retain
        accessModes:
          - ReadWriteOnce
        size: 20Gi

    kubeControllerManager:
      enabled: true
      service:
        selector:
          k8s-app: kube-controller-manager

    kubeEtcd:
      enabled: true
      service:
        selector:
          # Fix selector for kube-etcd for Talos
          # (set itentionally to kube-controller-manager because all master nodes has the same roles)
          k8s-app: kube-controller-manager
      serviceMonitor:
        scheme: https
        insecureSkipVerify: false
        serverName: localhost
        caFile: /etc/prometheus/secrets/etcd-secrets/ca.crt
        certFile: /etc/prometheus/secrets/etcd-secrets/server.crt
        keyFile: /etc/prometheus/secrets/etcd-secrets/server.key
        # Add nodename label
        relabelings:
          - sourceLabels: [__meta_kubernetes_pod_node_name]
            separator: ;
            regex: ^(.*)$
            targetLabel: nodename
            replacement: $1
            action: replace
        # Remove pod label
        metricRelabelings:
          - action: labeldrop
            regex: pod

    kubeScheduler:
      enabled: true
      service:
        selector:
          k8s-app: kube-controller-manager

    kubeProxy:
      enabled: false

    prometheusOperator:
      admissionWebhooks:
        certManager:
          enabled: true

    # prometheus:
    #   prometheusSpec:
    #     secrets:
    #       - etcd-secrets
