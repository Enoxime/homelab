apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 30m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: ">=v1.17.6 <1.18.0"
      sourceRef:
        kind: HelmRepository
        name: rook-ceph
        namespace: rook-ceph
      interval: 15m
  values:
    monitoring:
      enabled: true
      createPrometheusRules: true
    cephClusterSpec:
      storage:
        useAllNodes: true
        useAllDevices: true
    cephBlockPools:
      - name: rook-ceph-retain
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: rook-ceph-retain
          isDefault: false
          reclaimPolicy: Retain
          allowVolumeExpansion: true
          # see: https://desipient.com/blog/rook-csi-provisioner-empty-secret/
          parameters:
            imageFormat: "2"

            # RBD image features
            # Available for imageFormat: "2". Older releases of CSI RBD
            # support only the `layering` feature. The Linux kernel (KRBD) supports the
            # full complement of features as of 5.4
            # `layering` alone corresponds to Ceph's bitfield value of "2" ;
            # `layering` + `fast-diff` + `object-map` + `deep-flatten` + `exclusive-lock` together
            # correspond to Ceph's OR'd bitfield value of "63". Here we use
            # a symbolic, comma-separated format:
            # For 5.4 or later kernels:
            #imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            # For 5.3 or earlier kernels:
            imageFeatures: layering

            # The secrets contain Ceph admin credentials.
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph

            # Specify the filesystem type of the volume. If not specified, csi-provisioner
            # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
            # in hyperconverged settings where the volume is mounted on the same node as the osds.
            csi.storage.k8s.io/fstype: ext4
      - name: rook-ceph-delete
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: rook-ceph-delete
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          # see: https://desipient.com/blog/rook-csi-provisioner-empty-secret/
          parameters:
            imageFormat: "2"

            # RBD image features
            # Available for imageFormat: "2". Older releases of CSI RBD
            # support only the `layering` feature. The Linux kernel (KRBD) supports the
            # full complement of features as of 5.4
            # `layering` alone corresponds to Ceph's bitfield value of "2" ;
            # `layering` + `fast-diff` + `object-map` + `deep-flatten` + `exclusive-lock` together
            # correspond to Ceph's OR'd bitfield value of "63". Here we use
            # a symbolic, comma-separated format:
            # For 5.4 or later kernels:
            #imageFeatures: layering,fast-diff,object-map,deep-flatten,exclusive-lock
            # For 5.3 or earlier kernels:
            imageFeatures: layering

            # The secrets contain Ceph admin credentials.
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph

            # Specify the filesystem type of the volume. If not specified, csi-provisioner
            # will set default as `ext4`. Note that `xfs` is not recommended due to potential deadlock
            # in hyperconverged settings where the volume is mounted on the same node as the osds.
            csi.storage.k8s.io/fstype: ext4
    # cephFileSystems:
    #   - name: rook-cephfs-rwx-retain
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPools:
    #         - name: replicated-retain
    #           failureDomain: host
    #           replicated:
    #             size: 3
    #       preserveFilesystemOnDelete: false
    #       metadataServer:
    #         activeCount: 1
    #         activeStandby: true
    #     storageClass:
    #       enabled: true
    #       name: rook-cephfs-rwx-retain
    #       isDefault: false
    #       reclaimPolicy: Retain
    #       allowVolumeExpansion: true
    #   - name: rook-cephfs-rwx-delete
    #     spec:
    #       metadataPool:
    #         failureDomain: host
    #         replicated:
    #           size: 3
    #       dataPools:
    #         - name: replicated-delete
    #           failureDomain: host
    #           replicated:
    #             size: 3
    #       preserveFilesystemOnDelete: false
    #       metadataServer:
    #         activeCount: 1
    #         activeStandby: true
    #     storageClass:
    #       enabled: true
    #       name: rook-cephfs-rwx-delete
    #       isDefault: false
    #       reclaimPolicy: Delete
    #       allowVolumeExpansion: true
