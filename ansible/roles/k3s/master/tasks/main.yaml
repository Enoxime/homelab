---
- name: "Check if a master node is already installed"
  ansible.builtin.stat:
    path: "/etc/rancher/k3s/k3s.yaml"
  register: k3s_config

- name: "Create a k3s config directory"
  ansible.builtin.file:
    group: "root"
    mode: "600"
    owner: "root"
    path: "{{ config_directory_path }}"
    recurse: yes
    state: directory

- name: "Install helm"
  ansible.builtin.shell: |
    set -o pipefail

    curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
  args:
    creates: "/usr/local/bin/helm"

- name: "Create resolv.conf for coredns"
  ansible.builtin.template:
    mode: "644"
    dest: "{{ config_directory_path }}/resolv.conf"
    src: "resolv.conf"

- name: "Initialize master node"
  ansible.builtin.include_tasks: "one-master.yaml"
  when:
    - not k3s_config.stat.exists
    - k3s.masters | length == 1

- name: "Initialize master nodes"
  ansible.builtin.include_tasks: "cluster-masters.yaml"
  when:
    - not k3s_config.stat.exists
    - k3s.masters | length > 1
    - inventory_hostname == k3s.masters[0].host

- name: "Registering token"
  ansible.builtin.fetch:
    dest: "/tmp/master_cluster_node_token"
    flat: yes
    src: "/var/lib/rancher/k3s/server/node-token"
  when:
    - k3s_config.stat.exists
    - k3s.masters | length > 1
    - inventory_hostname == k3s.masters[0].host

- name: "Register masters in the cluster"
  ansible.builtin.include_tasks: "register-masters.yaml"
  when:
    - not k3s_config.stat.exists
    - k3s.masters | length > 1
    - not inventory_hostname == k3s.masters[0].host