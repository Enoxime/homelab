---
- name: "Set vault_init default to null"
  set_fact:
    vault_init: null

- name: "[Vault] - Install vault depending to the architecture"
  ansible.builtin.include_tasks: "vault-{{ ansible_machine }}.yaml"
  when: ansible_machine is defined

- name: "[Vault] - Add Hashicorp repository"
  kubernetes.core.helm_repository:
    repo_name: "hashicorp"
    repo_state: "present"
    repo_url: "https://helm.releases.hashicorp.com"

- name: "[Vault] - Generate vault-values.yaml"
  ansible.builtin.template:
    mode: "644"
    dest: "{{ config_directory_path }}/vault-values.yaml"
    src: "vault-values.yaml"

- name: "[Vault] - Install and setup Vault"
  kubernetes.core.helm:
    chart_ref: "hashicorp/vault"
    create_namespace: yes
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    release_name: "vault"
    release_namespace: "vault"
    update_repo_cache: yes
    values_files:
      - "{{ config_directory_path }}/vault-values.yaml"
    wait: yes
    wait_timeout: "15m"

- name: "Wait till the Vault is created"
  ansible.builtin.pause:
    minutes: "1"

- name: "[Vault] - Check if vault_init exists"
  ansible.builtin.stat:
    path: "{{ config_directory_path }}/vault_init"
  register: vault_exists

- name: "[Vault] - Initialize Vault"
  kubernetes.core.k8s_exec:
    command: "vault operator init -format=json -key-shares=5 -key-threshold=3"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    namespace: "vault"
    pod: "vault-0"
  register: vault_init
  when:
    - not vault_exists.stat.exists

- name: "[Vault] - Register keys in host"
  ansible.builtin.shell: "set -o pipefail; echo {{ vault_init.stdout | quote }} | jq > {{ config_directory_path }}/vault_init"
  when:
    - not vault_exists.stat.exists

- name: "[Vault] - Register vault init in variable"
  ansible.builtin.command: "cat {{ config_directory_path }}/vault_init"
  register: vault_init
  when:
    - vault_exists.stat.exists

- name: "[Vault] - Unseal Vault(s)"
  ansible.builtin.include_tasks: "vault-unseal.yaml"
  with_sequence: start=0 end="{{ k3s.config.vault.server.ha.replicas - 1 }}"

- name: "[Vault] - Create vault auth service account"
  kubernetes.core.k8s:
    kind: "ServiceAccount"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    name: "vault-auth"
    namespace: "vault"
    wait: yes

- name: "[Vault] - Define vault auth service account setup"
  ansible.builtin.template:
    mode: "644"
    dest: "{{ config_directory_path }}/vault-auth-service-account.yaml"
    src: "vault-auth-service-account.yaml"

- name: "[Vault] - Bind the vault-auth service account"
  kubernetes.core.k8s:
    apply: yes
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    namespace: "vault"
    src: "{{ config_directory_path }}/vault-auth-service-account.yaml"

- name: "[Vault] - Log in Vault"
  kubernetes.core.k8s_exec:
    command: "vault login {{ vault_init.stdout | from_json | community.general.json_query('root_token') }}"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    namespace: "vault"
    pod: "vault-0"

- name: "[Vault] - Get list of enabled authentication methods"
  kubernetes.core.k8s_exec:
    command: "/bin/sh vault auth list | grep kubernetes"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    namespace: "vault"
    pod: "vault-0"
  register: vault_kubernetes_is_enabled

- name: "[Vault] - Enable and set up kubernetes auth"
  block:
    - name: "Enable kubernetes"
      kubernetes.core.k8s_exec:
        command: "vault auth enable kubernetes"
        kubeconfig: "/etc/rancher/k3s/k3s.yaml"
        namespace: "vault"
        pod: "vault-0"

    - name: "Create a secret"
      kubernetes.core.k8s_exec:
        command: "vault secrets enable --path=k8s kv-v2"
        kubeconfig: "/etc/rancher/k3s/k3s.yaml"
        namespace: "vault"
        pod: "vault-0"

    - name: "Write k8s policy"
      kubernetes.core.k8s_exec:
        command: |
          /bin/sh vault policy write k8s-internal-ro - <<EOD
          path "k8s/data/projects/internal/*" {
              capabilities = ["read"]
          }
          EOD
        kubeconfig: "/etc/rancher/k3s/k3s.yaml"
        namespace: "vault"
        pod: "vault-0"

    - name: "Register vault_sa_name"
      ansible.builtin.command: |
        k3s kubectl get sa -n vault vault-auth -o jsonpath="{.secrets[*]['name']}"
      register: vault_sa_name

    - name: "Register sa_jwt_token"
      ansible.builtin.shell: |
        k3s kubectl get secret -n vault {{ vault_sa_name.stdout }} -o jsonpath="{.data.token}" | base64 --decode
      register: sa_jwt_token

    - name: "Register sa_ca_crt"
      ansible.builtin.shell: |
        k3s kubectl get secret -n vault {{ vault_sa_name.stdout }} -o jsonpath="{.data['ca\.crt']}" | base64 --decode
      register: sa_ca_crt

    - name: "Write k8s config"
      kubernetes.core.k8s_exec:
        command: |
          /bin/sh vault write auth/kubernetes/config \
          token_reviewer_jwt="{{ sa_jwt_token.stdout }}" \
          kubernetes_host="https://{{ k3s.config.cluster.ip }}:{{ k3s.config.cluster.port }}" \
          kubernetes_ca_cert="{{ sa_ca_crt.stdout }}"
        kubeconfig: "/etc/rancher/k3s/k3s.yaml"
        namespace: "vault"
        pod: "vault-0"

    - name: "Bound k8s service account to k8s policy"
      kubernetes.core.k8s_exec:
        command: |
          /bin/sh vault write auth/kubernetes/role/k8s-home \
          bound_service_account_names=vault-auth \
          bound_service_account_namespaces=default \
          policies=k8s-internal-ro \
          ttl=24h
        kubeconfig: "/etc/rancher/k3s/k3s.yaml"
        namespace: "vault"
        pod: "vault-0"
  when:
    - vault_kubernetes_is_enabled.stdout | length > 0

- name: "[Vault] - Add Kubernetes External Secrets repository"
  kubernetes.core.helm_repository:
    repo_name: "external-secrets"
    repo_state: "present"
    repo_url: "https://external-secrets.github.io/kubernetes-external-secrets/"

- name: "[Vault] - Get Vault config info"
  kubernetes.core.k8s_info:
    kind: "Service"
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    name: "vault"
    namespace: "vault"
  register: "vault_config"

- name: "[Vault] - Install kubernetes external secrets"
  kubernetes.core.helm:
    chart_ref: "external-secrets/kubernetes-external-secrets"
    create_namespace: yes
    kubeconfig: "/etc/rancher/k3s/k3s.yaml"
    release_name: "kubernetes-external-secrets"
    release_namespace: "vault"
    release_values:
      env:
        VAULT_ADDR: |
          {{ vault_config | community.general.json_query('resources[0].spec.ports[?port==`8200`].name') }}://{{ vault_config | community.general.json_query('resources[0].spec.selector."app.kubernetes.io/name"') }}:8200
    update_repo_cache: yes
    wait: yes