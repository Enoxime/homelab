---
- name: "Install ufw if not installed"
  ansible.builtin.apt:
    name: ufw
    state: present
    update_cache: yes
    cache_valid_time: 86400

- name: "Reset firewall"
  community.general.ufw:
    state: reset

- name: "Config port/protocol/network rules"
  community.general.ufw:
    comment: "{{ item.comment | default(omit) }}"
    delete: "{{ item.delete | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    from_ip: "{{ item.from_ip | default(omit) }}"
    from_port: "{{ item.from_port | default(omit) }}"
    insert: "{{ item.insert | default(omit) }}"
    insert_relative_to: "{{ item.insert_relative_to | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    log: "{{ item.log | default(omit) }}"
    logging: "{{ item.logging | default(omit) }}"
    name: "{{ item.name | default(omit) }}"
    policy: "{{ item.policy | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    route: "{{ item.route | default(omit) }}"
    rule: "{{ item.rule | default('allow') }}"
    state: "{{ item.state | default(omit) }}"
    to_ip: "{{ item.to_ip | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
  loop: "{{ ufw_rules }}"

- name: "Config application rules"
  community.general.ufw:
    name: "{{ item.name }}"
    rule: "{{ (item.rule is defined) | ternary(item.rule, 'allow') }}"
  loop: "{{ ufw_applications }}"
  when:
    - ufw_applications is defined

- name: "Config service"
  ansible.builtin.template:
    src: ufw
    dest: /etc/default/ufw
    owner: root
    group: root
    mode: 0644

- name: "start firewall"
  community.general.ufw:
    state: "{{ ufw_state | default('enabled') }}"
    logging: "{{ ufw_logging | default('off') }}"
...