---
- name: Install Docker dependencies
  ansible.builtin.apt:
    name: "{{ docker_pckg_dependencies }}"


# TODO: That doesn't seems to work anymore. To check.
- name: Add Docker GPG apt-key
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    state: present

- name: Add repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present

- name: Install Docker
  ansible.builtin.apt:
    name: "{{ item }}"
    update_cache: yes
  loop:
    - docker-ce
    - docker-ce-cli
    - containerd.io

- name: Install docker-compose
  ansible.builtin.pip:
    name: docker-compose
    executable: "pip3"

- name: "Ensure groupe 'docker' exists with correct gid"
  ansible.builtin.group:
    name: "docker"
    state: present
    gid: 1750 # need to confirm this gid is the default one

- name: Add user(s) to "docker" group
  ansible.builtin.user:
    append: true
    groups: "docker"
    name: "{{ item }}"
  loop: "{{ docker_users }}"
  when: docker_users is defined

- name: "Stop dockerd service"
  ansible.builtin.service:
    name: "docker.service"
    state: "stopped"
  when:
    - docker_config is defined

- name: "Check if backup already exists"
  ansible.builtin.stat:
    path: "/var/lib/docker.bk"
  register: docker_backup_exists
  when:
    - docker_config is defined

# TODO: Cannot do that when /var/lib/docker is a mounting point (e.g: zfs)
# - name: "Backup /var/lib/docker"
#   ansible.builtin.command: "mv /var/lib/docker /var/lib/docker.bk"
#   when:
#     - docker_config is defined
#     - docker_backup_exists.stat.exists == false

- name: "Configure docker daemon"
  ansible.builtin.template:
    backup: yes
    dest: "/etc/docker/daemon.json"
    group: "root"
    mode: "400"
    owner: "root"
    src: "daemon.json.j2"
  when:
    - docker_config is defined

- name: "Start dockerd service"
  ansible.builtin.service:
    enabled: yes
    name: "docker.service"
    state: "started"
  when:
    - docker_config is defined
...