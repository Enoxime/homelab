---
- name: "Gather disks facts"
  ansible.builtin.shell: "zpool status | grep {{ item }} || exit 0"
  loop: "{{ iter_pool.list_disks }}"
  register: gather_disks_facts

- name: "Sort gather_disks_facts"
  set_fact:
    disks_facts: "true"
  loop: "{{ gather_disks_facts.results }}"
  register: disks_in_pool
  when: item.stdout|length > 0

- name: "Gather pool facts"
  ansible.builtin.stat:
    path: "{{ zfs.zfs_mountpoint }}/{{ iter_pool.mountpoint_name }}"
  register: pool_exists

- name: "Partition disks"
  community.general.parted:
    device: "{{ item }}"
    label: "gpt"
    state: "present"
  loop: "{{ iter_pool.list_disks }}"
  when: disks_in_pool is not defined

- name: "Create pool(s)"
  ansible.builtin.command: "zpool create -m {{ zfs.zfs_mountpoint }}/{{ iter_pool.mountpoint_name }} {{ iter_pool.mountpoint_name }} {{ iter_pool.pool_type }} {{ iter_pool.list_disks | join(' ') }}"
  when:
    - iter_pool.state == "present"
    - pool_exists.stat.exists == false

- name: "Set zfs properties"
  ansible.builtin.command: "zfs set {{ property.key }}={{ property.value }} {{ iter_pool.mountpoint_name }}"
  loop: "{{ query('dict', iter_pool.option) }}"
  loop_control:
    loop_var: "property"
  when:
    - iter_pool.option is defined

- name: "Create and setup zfs"
  ansible.builtin.include_tasks: "create_zfs.yaml"
  loop: "{{ iter_pool.zfs_fs }}"
  when:
    - iter_pool.zfs_fs is defined
...